name: indexer

services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    ports:
      - "8989:8989"
    volumes:
      - ./sonarr:/config
      - ${MEDIA_PATH}:/media
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    depends_on:
      - prowlarr
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.services.sonarr.loadbalancer.server.port=8989

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    volumes:
      - ./radarr:/config
      - ${MEDIA_PATH}:/media
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    depends_on:
      - prowlarr
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.services.radarr.loadbalancer.server.port=7878

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    restart: unless-stopped
    volumes:
      - ./lidarr:/config
      - ${MEDIA_PATH}:/media
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)
      - traefik.http.routers.lidarr.tls=true
      - traefik.http.services.lidarr.loadbalancer.server.port=8686

  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    restart: unless-stopped
    ports:
      - "9696:9696"
    volumes:
      - ./prowlarr:/config
      - ${MEDIA_PATH}:/media
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696

  flaresolverr:
    image: flaresolverr/flaresolverr
    container_name: flaresolverr
    restart: unless-stopped
    networks:
      - traefik

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    restart: unless-stopped
    ports:
      - "6767:6767"
    volumes:
      - ./bazarr:/config
      - ${MEDIA_PATH}:/media
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)
      - traefik.http.routers.bazarr.tls=true
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
  
  flexget:
    image: linuxserver/flexget
    container_name: flexget
    restart: unless-stopped
    volumes:
      - ./flexget/config:/config
      - ./flexget/data:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.flexget.rule=Host(`flexget.${DOMAIN}`)
      - traefik.http.routers.flexget.tls=true
      - traefik.http.services.flexget.loadbalancer.server.port=5050

  searcharr:
    image: toddrob/searcharr
    container_name: searcharr
    restart: unless-stopped
    volumes:
      - ./searcharr/data:/app/data
      - ./searcharr/settings.py:/app/settings.py
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UMASK=${UMASK_SET}
    networks:
      - traefik
    depends_on:
      - sonarr
      - radarr

networks:
  traefik:
    external: true
